<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.summer.accounts.mappers">
  
  <sql id="baseCondition">
			<choose>
				<when test="searchTrade == '10'">
					and a.trade_id= '10'
				</when>
				<when test="searchTrade == '20'">
					and a.trade_id= '20'
				</when>
				<otherwise>
					and (a.trade_id='10' or a.trade_id='20')
				</otherwise>
			</choose>
	</sql>
	
	<select id="do_selectListWeek" parameterType="SearchVO" resultType="Accounts">
		select T1.*,(NVL(T1.sumInc,0) - NVL(T1.sumExp,0)) as sumTotal
		from(
		    select TRUNC(a_date,'iw') as a_date
		    	, TRUNC(a_date,'iw') + 6 as endDate
		        ,  sum(case when trade_id='10' then amount else 0 end) AS sumExp
		        , sum(case when trade_id='20' then amount else 0 end) AS sumInc
		    from su_accounts
		    where id=#{searchWord}
		    group by TRUNC(a_date,'iw')
		    order by TRUNC(a_date,'iw')) T1
		where to_char(a_date,'yyyy/mm') = #{searchDiv} or to_char(a_date,'yyyy') = #{searchDiv}
	
	</select>
	
	<select id="do_selectListMonth" parameterType="SearchVO" resultType="Accounts">
		select substr(yearMonth,6,2) as a_date ,sumExp,sumInc,(NVL(sumInc,0) - NVL(sumExp,0)) as sumTotal
		from(
				select substr(TO_CHAR(a_date, 'YYYY-MM-DD'),1,7) as yearMonth
				    ,  sum(case when trade_id='10' then amount else 0 end) AS sumExp
				    , sum(case when trade_id='20' then amount else 0 end) AS sumInc
				from su_accounts
				where id=#{searchWord}
				group by substr(TO_CHAR(a_date, 'YYYY-MM-DD'),1,7))
		where substr(yearMonth,1,4) = #{searchDiv}
		order by yearMonth DESC
	</select>

	<select id="do_selectList" parameterType="SearchVO" resultType="Accounts">
		SELECT T1.ano
      			,T1.id
      			,(select cd_dtl_nm 
                  from su_codes 
                  where cd_mst_id=
                        case when T1.trade_id='10' then 'ACC_CAT_EXPENSES'
                            when T1.trade_id='20' then 'ACC_CAT_INCOMES'
                        END 
                  and cd_dtl_id=T1.category_id) as category_id
		      ,TO_CHAR(T1.a_date, 'YYYY-MM-DD') as a_date
		      ,T1.item
		      ,(select cd_dtl_nm from su_codes where cd_mst_id=case when T1.trade_id='10' then 'ACC_ACCOUNT_EXPENSES'
                            when T1.trade_id='20' then 'ACC_ACCOUNT_INCOMES'
                        END  and cd_dtl_id=T1.account_id) as account_id
		      ,(select cd_dtl_nm from su_codes where cd_mst_id='ACC_TRADE' and cd_dtl_id=T1.trade_id) as trade_id
		      ,T1.amount
		      ,T1.memo
		      ,T1.total_cnt
		      ,T1.rnum 
		FROM (SELECT a.*, ROW_NUMBER() OVER (ORDER BY a.a_date desc) as rnum
		        ,COUNT(*) OVER() as total_cnt
		    FROM su_accounts a 
		    WHERE a.id= #{searchWord}
		    <include refid="baseCondition"/>   
		    ) T1
		WHERE rnum BETWEEN (#{pageSize} * (#{pageNum} -1) +1) AND (#{pageSize} * (#{pageNum} -1)+#{pageSize})
		ORDER BY a_date DESC ,T1.ano DESC
	

	</select> 
	
	<select id="do_selectOne" parameterType="Accounts" resultType="Accounts">
			SELECT a.ano          
					,a.id           
					,(select cd_dtl_id
                  from su_codes 
                  where cd_mst_id=
                        case when a.trade_id='10' then 'ACC_CAT_EXPENSES'
                            when a.trade_id='20' then 'ACC_CAT_INCOMES'
                        END 
                  and cd_dtl_id=a.category_id) as category_id
					,TO_CHAR(a.a_date, 'YYYY-MM-DD') as a_date       
					,a.item             
					,(select cd_dtl_id from su_codes where cd_mst_id=case when a.trade_id='10' then 'ACC_ACCOUNT_EXPENSES'
                            when a.trade_id='20' then 'ACC_ACCOUNT_INCOMES'
                        END  and cd_dtl_id=a.account_id) as account_id   
					,(select cd_dtl_id from su_codes where cd_mst_id='ACC_TRADE' and cd_dtl_id=a.trade_id) as trade_id         
					,a.amount       
					,a.memo             
			FROM su_accounts a
			WHERE a.ano=#{ano} and a.id=#{id}
		
	</select>
	
	<update id="do_upsert" parameterType="Accounts">

		MERGE INTO SU_ACCOUNTS T1
		USING (SELECT  #{ano} 			AS ano
		              ,#{id} 			AS id
		              ,#{categoryId} AS category_id
		              ,#{aDate} 		AS a_date
		              ,#{item} 		AS item
		              ,#{accountId} 	AS account_id
		              ,#{tradeId} 	AS trade_id
		              ,#{amount} 		AS amount
		              ,#{memo} 		AS memo
		        FROM DUAL ) T2
		ON (T1.ano = T2.ano)
		WHEN MATCHED THEN
		    UPDATE SET T1.id = T2.id
		              ,T1.category_id = T2.category_id
		              ,T1.a_date = T2.a_date
		              ,T1.item = T2.item
		              ,T1.account_id = T2.account_id
		              ,T1.trade_id = T2.trade_id
		              ,T1.amount = T2.amount
		              ,T1.memo = T2.memo
		WHEN NOT MATCHED THEN
		    INSERT (T1.ano,T1.id,T1.category_id,T1.a_date,T1.item
		            ,T1.account_id,T1.trade_id,T1.amount,T1.memo)
		    VALUES (ANO_SEQ.NEXTVAL,T2.id,T2.category_id,T2.a_date,T2.item
		            ,T2.account_id,T2.trade_id,T2.amount,T2.memo)
	</update>
	
	<delete id="do_delete" parameterType="Accounts">
		DELETE FROM SU_ACCOUNTS 
		WHERE ano = #{ano}
		
	</delete>
	
	

  </mapper>