<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.summer.good.mappers">
  <select id="do_entpList" parameterType="Good" resultType="Good">
  		SELECT entp_name, x_map_coord, y_map_coord
		FROM su_entp
		WHERE entp_id IN (
		        SELECT entp_id
		        FROM su_pne
		        WHERE good_id = #{goodId}            
		    )
  </select>
  	<select id="do_selectList" parameterType="SearchVO" resultType="Good">
		SELECT 
		  			T1.rnum as no
		           ,T1.gid as goodId
		  			,T1.gname as goodName
		  			,T1.gprice as goodPrice
		  			,T1.total_cnt
		FROM (
					SELECT rownum as rnum
		                  ,sg.good_id as gid
							,sg.good_name as gname
							,sp.price as gprice
							,COUNT(*) OVER() as total_cnt
		    		FROM su_good sg
		       		JOIN (	SELECT good_id
		                       	,min(good_price) as price
		                    FROM su_pne
		                   GROUP BY good_id) sp 
		                     ON sg.good_id = sp.good_id
		                      AND sg.good_name LIKE #{searchWord} ||'%') T1
		WHERE rnum BETWEEN (#{pageSize} * (#{pageNum} -1) + 1) AND (#{pageSize} * (#{pageNum}-1)+#{pageSize})
  	</select>
  	<select id="do_selectOne" parameterType="Good" resultType="Good">
  		SELECT sg.good_id as goodId
		        ,sg.good_name as goodName
		        ,sp.min_price as minPrice
		        ,sp.price as avgPrice
		        ,sp.max_price as maxPrice
		FROM su_good sg
		JOIN (   SELECT good_id
		                ,min(good_price) as min_price
		                ,round(avg(good_price),0) as price
		                ,max(good_price) as max_price
		        FROM su_pne
		        GROUP BY good_id) sp 
		ON sg.good_id = sp.good_id
		AND sg.good_id= #{goodId}
  	</select>
  	<select id="do_selectEntp" parameterType="Good" resultType="Good">
  	<![CDATA[ 
  		SELECT  T3.rnum as no, T3.eid as entp_id, T3.ename as entp_name, T3.good_price as good_price
		FROM (  
		        SELECT rownum as rnum, T1.eid, t1.ename, T1.distance, T2.good_price
		        FROM (
		                SELECT  DIS.entp_id as eid, DIS.entp_name as ename, DIS.distance
		                FROM (
		                    SELECT  entp_id, entp_name, ( 6371 * acos( cos( RADIANS(#{XMapCoord}) ) * cos( RADIANS(  x_map_coord ) )
		                            * cos( RADIANS( y_map_coord) - RADIANS(#{YMapCoord}) )
		                            + sin( RADIANS(#{XMapCoord}) ) * sin( RADIANS( x_map_coord) ) ) ) AS distance
		                    FROM SU_ENTP
		                ORDER BY distance
		                ) DIS ) T1
		                ,(
		                    SELECT *
		                    FROM SU_PNE
		                    WHERE good_id = #{goodId}       
		                ) t2
		        WHERE t1.eid = t2.entp_id
		) T3
		WHERE T3.rnum <= 10
		]]> 
  	</select>
  </mapper>